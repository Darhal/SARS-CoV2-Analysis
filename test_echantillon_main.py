import numpy as np

from src.stats import *
from Bio import Seq

'''Fichier pour les tests des fonctions call et perform sur des échantillons, pour répondre questions 1 et 2
'''

# H = ['TAAAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGT', 'TTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTA',
#      'TATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAA', 'AAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTC',
#      'GGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTC', 'TACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACG',
#      'GTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCT', 'CAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATCTGT',
#      'AGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAA', 'AAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTC'
# ]

# G = ['UAAAGGUUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGU',
#  'UUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCUA',
#  'UAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCUAAA',
#  'AAGGUUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUC',
#  'GGUUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUC',
#  'UACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCUAAACG',
#  'GUUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCU',
#  'CAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCUAAACGAACUUUAAAAUCUGU',
#  'AGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUCUCUAAACGAACUUUAAA',
#  'AAGGUUUAUACCUUCCCAGGUAACAAACCAACCAACUUUCGAUCUCUUGUAGAUCUGUUC']

def moyenne_nucleotide(tab):
    ''' La fonction calcule la moyenne d'apparition de chaque nucleotide dans l'échantillon

    Args :
        tab : échantillon (liste) de séquences

    Returns :
        dictionnaire des apparitions moyenne des nucléotides dans l'échantillon
    '''
    A = moyenne(nombre_element_echantillon(tab,NUCLEOTIDES)['A'])
    U = moyenne(nombre_element_echantillon(tab,NUCLEOTIDES)['U'])
    G = moyenne(nombre_element_echantillon(tab,NUCLEOTIDES)['G'])
    C = moyenne(nombre_element_echantillon(tab,NUCLEOTIDES)['C'])
    return {'A':A, 'U':U, 'G':G, 'C':C}


H1 = ['TAAAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGT',
'TTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTA',
'TATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAA',
'AAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTC',
'GGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTC',
'TACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACG',
'GTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCT',
'CAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAAATCTGT',
'AGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTCTCTAAACGAACTTTAAA',
'AAGGTTTATACCTTCCCAGGTAACAAACCAACCAACTTTCGATCTCTTGTAGATCTGTTC']

def transcript(list):
    L = []
    for k in list:
        L.append(transcription_complementaire(k))
    return L

def nb_elem_ech(list):
    for l in list:
        print(nombre_elements(l,NUCLEOTIDES))

'''
{'A': 18, 'U': 19, 'G': 8, 'C': 15}
{'A': 16, 'U': 21, 'G': 6, 'C': 17}
{'A': 18, 'U': 19, 'G': 6, 'C': 17}
{'A': 17, 'U': 19, 'G': 8, 'C': 16}
{'A': 15, 'U': 20, 'G': 8, 'C': 17}
{'A': 17, 'U': 18, 'G': 7, 'C': 18}
{'A': 15, 'U': 21, 'G': 7, 'C': 17}
{'A': 19, 'U': 20, 'G': 6, 'C': 15}
{'A': 21, 'U': 18, 'G': 7, 'C': 14}
{'A': 17, 'U': 19, 'G': 8, 'C': 16}

[18, 16, 18, 17, 15, 17, 15, 19, 21, 17]
[19, 21, 19, 19, 20, 18, 21, 20, 18, 19]
[8, 6, 6, 8, 8, 7, 7, 6, 7, 8]
[15, 17, 17, 16, 17, 18, 17, 15, 14, 16]

moyenne([18, 16, 18, 17, 15, 17, 15, 19, 21, 17])
moyenne([19, 21, 19, 19, 20, 18, 21, 20, 18, 19])
moyenne([8, 6, 6, 8, 8, 7, 7, 6, 7, 8])
moyenne([15, 17, 17, 16, 17, 18, 17, 15, 14, 16])
'''
